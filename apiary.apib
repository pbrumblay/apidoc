FORMAT: 1A
HOST: http://apidoc.mismatchedcode.com/

# apidoc-blueprint

This is a sample api which I built to figure out API Blueprint (and others)

# Group Healthcheck Operations

## Root operation [GET /]

Checks basic connectivity to the service.

+ Response 200 (application/json)

        {"message":"Hello"}

## Liveness probe [GET /live]

The service will respond positively if it is up and running and either starting up or shutting down.

+ Response 200 (application/json)

        {"message":"Alive"}

## Readiness probe [GET /ready]

The service will respond positively if it is up and running and ready to accept requests

+ Response 200 (application/json)

        {"message":"Ready"}

# Group Control Operations

## Workers 

### List workers [GET /workers/{id}/{?rangeStart,rangeStop,state}]

+ Parameters
    + id (optional, number) - A specific worker id.
    + rangeStart (optional, number) - Beginning id to define a range (inclusive)
        + Default: 0
    + rangeStop (optional, number) - Ending id to define a range (inclusive)
        + Default: `n-1`
    + state (optional, array) - Filter the results by state
        + Members
            + "started"
            + "stopped"
            + "new"
            + "failed"

+ Response 200 (application/json)

        {"workers": 
            [
                {"1": 
                    {
                        "name": "Work Batch 1",
                        "state": "started"
                    }
                }, 
                {"5": 
                    {
                        "name": "Email Sender",
                        "state": "stopped"
                    }
                }, 
                {"8": 
                    {
                        "name": "Food Prep",
                        "state": "new"
                    }
                }, 
                {"9": 
                    {
                        "name": "Zombie Killer",
                        "state": "failed"
                    }
                }
            ]
        }

### Control state [POST /workers/{id}/{command}/{?rangeStart,rangeStop,state}]
+ Parameters
    + command (required, string)
        + Members
            + "start" 
            + "stop" 
            + "delete"
    + id (optional, number) - A specific worker id.
    + rangeStart (optional, number) - Beginning id to define a range (inclusive)
        + Default: 0
    + rangeStop (optional, number) - Ending id to define a range (inclusive)
        + Default: `n-1`
    + state (optional, array) - Filter the results by state
        + Members
            + "started"
            + "stopped"
            + "new"
            + "failed"
+ Response 202 (application/json)

        {"message":"Accepted."}

### Add new worker [POST /workers]

+ Request (application/json)

    + Body

            {
              "name": "Worker Name"
            }

    + Schema

            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string
                }
              }
            }

+ Response 201 (application/json)

        { "message": "Created." }