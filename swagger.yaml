swagger: '2.0'
info:
  version: "1.0.0"
  title: apidoc-blueprint
  description: 'Swagger version of api documentation example'
host: apidoc.mismatchedcode.com
basePath: /
securityDefinitions: {}
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /:
    get:
      description: Checks basic connectivity to the service.
      tags:
      - Healthcheck Operations
      operationId: Get_Root operation_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SimpleReponse'
          examples:
            application/json: |
              {
                "message": "Hello"
              }
  /live:
    get:
      description: The service will respond positively if it is up and running and either starting up or shutting down.
      tags:
      - Healthcheck Operations
      operationId: Get_Liveness probe_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SimpleReponse'
          examples:
            application/json: |
              {
                "message": "Alive"
              }
  /ready:
    get:
      description: The service will respond positively if it is up and running and ready to accept requests
      tags:
      - Healthcheck Operations
      operationId: Get_Readiness probe_
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SimpleReponse'
          examples:
            application/json: |
              {
                "message": "Ready"
              }
  /workers/{id}/:
    get:
      tags:
      - Control Operations
      operationId: List workers_
      produces:
      - application/json
      parameters:
        - name: id
          in: path
          required: true
          x-is-map: false
          type: number
          format: double
          description: A specific worker id.
        - name: rangeStart
          in: query
          required: false
          x-is-map: false
          default: 0
          type: integer
          description: Beginning id to define a range (inclusive)
        - name: rangeStop
          in: query
          required: false
          x-is-map: false
          type: integer
          description: Ending id to define a range (inclusive)
        - name: state
          in: query
          required: false
          x-is-map: false
          enum:
            - failed
            - new
            - started
            - stopped
          type: string
          description: Filter the results by state
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/WorkerList'
          examples:
            application/json: |
              [
                {
                  "id": 100,
                  "name": "Worker 1",
                  "state": "failed"
                }
              ]
  /workers/{id}/{command}/:
    post:

      tags:
      - Control Operations
      operationId: Create_Control state_
      produces:
      - application/json
      parameters:
        - name: command
          in: path
          required: true
          x-is-map: false
          enum:
            - start
            - stop
            - delete
          type: string
        - name: id
          in: path
          required: true
          x-is-map: false
          type: integer
          description: A specific worker id.
        - name: rangeStart
          in: query
          required: false
          x-is-map: false
          default: 0
          type: integer
          description: Beginning id to define a range (inclusive)
        - name: rangeStop
          in: query
          required: false
          x-is-map: false
          default: 0
          type: integer
          description: Ending id to define a range (inclusive)
        - name: state
          in: query
          required: false
          x-is-map: false
          enum:
            - failed
            - new
            - started
            - stopped
          type: string
          description: Filter the results by state
      responses:
        200:
          description: command response
          schema:
            $ref: '#/definitions/SimpleReponse'
          examples:
            application/json: |
              {
                "message": "Command received"
              }
  /workers:
    post:
      description: post description
      tags:
      - Control Operations
      operationId: Add new worker_
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        required: true
        x-is-map: false
        schema:
          $ref: '#/definitions/AddWorkerRequest'
      responses:
        200:
          description: response
          schema:
            $ref: '#/definitions/SimpleReponse'
          examples:
            application/json: |
              {
                "message": "Worker Created"
              }
definitions:
  AddWorkerRequest:
    title: Add new worker request
    type: object
    properties:
      name:
        type: string
    required:
    - name
  SimpleReponse:
    title: Simple Response With Message
    type: object
    properties:
      message:
        type: string
    required:
    - message
  WorkerList:
    title: List of Workers
    type: array
    items:
      properties:
        id:
          type: integer
        name:
          type: string
        state:
          type: string
          enum:
            - failed
            - new
            - started
            - stopped
      required:
      - id
      - name
      - state
